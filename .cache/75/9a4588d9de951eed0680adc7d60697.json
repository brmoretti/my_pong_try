{"id":"src/Board.ts","dependencies":[{"name":"/home/brmoretti/Projects/my_pong_try/tsconfig.json","includedInParent":true,"mtime":1748787609708},{"name":"/home/brmoretti/Projects/my_pong_try/package.json","includedInParent":true,"mtime":1748790746902}],"generated":{"js":"\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nvar _a;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Board = void 0;\nvar Board = /*#__PURE__*/_createClass(function Board() {\n  _classCallCheck(this, Board);\n});\nexports.Board = Board;\n_a = Board;\nBoard.width = 624;\nBoard.height = 351;\nBoard.backBorder = _a.width / 50;"},"sourceMaps":{"js":{"mappings":[{"source":"src/Board.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":14,"column":4}},{"source":"src/Board.ts","name":null,"original":{"line":1,"column":18},"generated":{"line":14,"column":9}},{"source":"src/Board.ts","name":null,"original":{"line":1,"column":18},"generated":{"line":14,"column":25}},{"source":"src/Board.ts","name":null,"original":{"line":1,"column":18},"generated":{"line":14,"column":37}},{"source":"src/Board.ts","name":null,"original":{"line":1,"column":18},"generated":{"line":14,"column":47}},{"source":"src/Board.ts","name":null,"original":{"line":1,"column":18},"generated":{"line":14,"column":53}},{"source":"src/Board.ts","name":null,"original":{"line":1,"column":18},"generated":{"line":15,"column":2}},{"source":"src/Board.ts","name":null,"original":{"line":1,"column":18},"generated":{"line":15,"column":17}},{"source":"src/Board.ts","name":null,"original":{"line":1,"column":18},"generated":{"line":15,"column":24}},{"source":"src/Board.ts","name":null,"original":{"line":1,"column":18},"generated":{"line":15,"column":29}},{"source":"src/Board.ts","name":null,"original":{"line":1,"column":18},"generated":{"line":16,"column":0}},{"source":"src/Board.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":17,"column":0}},{"source":"src/Board.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":17,"column":7}},{"source":"src/Board.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":17,"column":8}},{"source":"src/Board.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":17,"column":13}},{"source":"src/Board.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":17,"column":16}},{"source":"src/Board.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":17,"column":21}},{"source":"src/Board.ts","name":null,"original":{"line":2,"column":17},"generated":{"line":19,"column":0}},{"source":"src/Board.ts","name":null,"original":{"line":2,"column":17},"generated":{"line":19,"column":5}},{"source":"src/Board.ts","name":null,"original":{"line":2,"column":17},"generated":{"line":19,"column":6}},{"source":"src/Board.ts","name":null,"original":{"line":2,"column":22},"generated":{"line":19,"column":11}},{"source":"src/Board.ts","name":null,"original":{"line":2,"column":33},"generated":{"line":19,"column":14}},{"source":"src/Board.ts","name":null,"original":{"line":2,"column":22},"generated":{"line":19,"column":17}},{"source":"src/Board.ts","name":null,"original":{"line":3,"column":17},"generated":{"line":20,"column":0}},{"source":"src/Board.ts","name":null,"original":{"line":3,"column":17},"generated":{"line":20,"column":5}},{"source":"src/Board.ts","name":null,"original":{"line":3,"column":17},"generated":{"line":20,"column":6}},{"source":"src/Board.ts","name":null,"original":{"line":3,"column":23},"generated":{"line":20,"column":12}},{"source":"src/Board.ts","name":null,"original":{"line":3,"column":34},"generated":{"line":20,"column":15}},{"source":"src/Board.ts","name":null,"original":{"line":3,"column":23},"generated":{"line":20,"column":18}},{"source":"src/Board.ts","name":null,"original":{"line":4,"column":17},"generated":{"line":21,"column":0}},{"source":"src/Board.ts","name":null,"original":{"line":4,"column":17},"generated":{"line":21,"column":5}},{"source":"src/Board.ts","name":null,"original":{"line":4,"column":17},"generated":{"line":21,"column":6}},{"source":"src/Board.ts","name":null,"original":{"line":4,"column":27},"generated":{"line":21,"column":16}},{"source":"src/Board.ts","name":null,"original":{"line":4,"column":38},"generated":{"line":21,"column":19}},{"source":"src/Board.ts","name":null,"original":{"line":4,"column":42},"generated":{"line":21,"column":21}},{"source":"src/Board.ts","name":null,"original":{"line":4,"column":43},"generated":{"line":21,"column":22}},{"source":"src/Board.ts","name":null,"original":{"line":4,"column":48},"generated":{"line":21,"column":27}},{"source":"src/Board.ts","name":null,"original":{"line":4,"column":51},"generated":{"line":21,"column":30}},{"source":"src/Board.ts","name":null,"original":{"line":4,"column":27},"generated":{"line":21,"column":32}}],"sources":{"src/Board.ts":"export class Board {\n\tstatic readonly width: number = 624\n\tstatic readonly height: number = 351\n\tstatic readonly backBorder: number = this.width / 50\n}\n"},"lineCount":null}},"error":null,"hash":"ee50bbffba591b17b19b5e6d13fa7fe6","cacheData":{"env":{}}}